@page "/artisans/requests"
@inject NavigationService Navigator
@inject AuthService AuthStateService
@inject OrderService OrderService

<PageTitle>Job Requests</PageTitle>

<!--begin::Container-->
<!--begin::Row-->
<div class="row g-5 g-xl-8">
	
	@foreach (var order in Orders.Data)
	{
		<div class="col-xl-4" style="cursor:pointer" @onclick="() => Navigator.NavigateToRequestDetail(order.Id)">
			<!--begin::Statistics Widget 1-->
			<div class="card bgi-no-repeat card-xl-stretch mb-xl-8" style="background-position: right top; background-size: 30% auto; background-image: url(assets/media/svg/shapes/abstract-4.svg)">
				<!--begin::Body-->
				<div class="card-body">
					<a href="#" class="card-title fw-bolder text-muted text-hover-primary fs-4">@order.Service.Name</a>
					<div class="fw-bolder text-primary my-6">@order.WorkAddress.City, @order.WorkAddress.StreetAddress</div>
					<p class="text-dark-75 fw-bold fs-5 m-0">@order.Description</p>
				</div>
				<!--end::Body-->
			</div>
			<!--end::Statistics Widget 1-->
		</div>
	}
</div>
<!--end::Row-->

@code {
	PaginatedList<OrderPageDto> Orders { get; set; } = new();
	PaginatedQuery Query { get; set; } = PaginatedQuery.Build(0, 1, 20);

	protected override async Task OnInitializedAsync()
	{
		await AuthStateService.CheckAuthStatus();
		Orders.Data = new();
		Orders = await OrderService.GetRequestPage(Query);
	}
}
